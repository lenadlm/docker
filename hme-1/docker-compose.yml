services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared_tunnel
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    networks:
      - portainer_default

  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy:latest
    container_name: docker-socket-proxy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      CONTAINERS: 1
      IMAGES: 1
      NETWORKS: 1
      SERVICES: 1
      TASKS: 1
      INFO: 1
      VERSION: 1
      EXEC: 1
      SYSTEM: 1
      POST: 1
      GET: 1
      TZ: "Africa/Nairobi"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      portainer_default:
        ipv4_address: 172.30.0.30
    ports:
      - "127.0.0.1:2375:2375"
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "256M"
          pids: 50
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    environment:
      DOCKER_HOST: tcp://docker-socket-proxy:2375
    ports:
      - "8880:8080"
    networks:
      - portainer_default
    dns:
      - 172.30.0.53
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 200M

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    networks:
      portainer_default:
        ipv4_address: 172.30.0.53
    environment:
      - TZ=Africa/Nairobi
      - WEBPASSWORD=${WEBPASSWORD}
    volumes:
      - /d/data/docker/pihole/pihole:/etc/pihole
      - /d/data/docker/pihole/dnsmasq.d:/etc/dnsmasq.d
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80"
    restart: always
    dns:
      - 45.90.28.166
      - 45.90.30.166
    cap_add:
      - NET_ADMIN

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Africa/Nairobi
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    ports:
      - "32400:32400"
    devices:
      - "/dev/dri:/dev/dri"
    networks:
      - portainer_default
    dns:
      - 172.30.0.53
    volumes:
      - /d/data/docker/plex/config:/config
      - /d/data/media:/media

  samsung-tvplus:
    image: matthuisman/samsung-tvplus-for-channels
    container_name: samsung-tvplus
    restart: unless-stopped
    environment:
      - REGIONS=ca|gb|us
      - TZ=Africa/Nairobi
    ports:
      - "8182:80"
    networks:
      - portainer_default
    dns:
      - 172.30.0.53

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    command:
      - --cleanup=true
      - --include-restarting
      - --interval=10800
      - --trace
    restart: always
    networks:
      - portainer_default
    dns:
      - 172.30.0.53
    environment:
      - DOCKER_HOST=tcp://docker-socket-proxy:2375
      - TZ=Africa/Nairobi

  xteve:
    image: tinyserve/xteve:latest
    container_name: xteve
    restart: unless-stopped
    privileged: true
    environment:
      - TZ=Africa/Nairobi
    networks:
      - portainer_default
    dns:
      - 172.30.0.53
    ports:
      - "34400:34400"
    volumes:
      - /d/data/docker/xteve:/etc/xteve
    logging:
      options:
        max-size: "10m"
        max-file: "5"

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    network_mode: host
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Africa/Nairobi
      - SUBDOMAINS=nien3vgx3
      - TOKEN_DDNS=${TOKEN_DDNS}
      - UPDATE_IP=ipv4
      - LOG_FILE=true
    volumes:
      - /d/data/docker/duckdns/config:/config

networks:
  portainer_default:
    external: true
