services:

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared_tunnel
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    networks:
      - portainer_default

  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy:latest
    container_name: docker-socket-proxy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      CONTAINERS: 1
      IMAGES: 1
      NETWORKS: 1
      SERVICES: 1
      TASKS: 1
      INFO: 1
      VERSION: 1
      EXEC: 1
      SYSTEM: 1
      POST: 1
      GET: 1
      TZ: "Africa/Nairobi"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      portainer_default:
        ipv4_address: 172.30.0.30
    ports:
      - "2375:2375"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    environment:
      - DOCKER_HOST=tcp://docker-socket-proxy:2375
    ports:
      - "8880:8080"
    networks:
      - portainer_default
    dns:
      - 172.30.0.53
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: always
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80"
    networks:
      portainer_default:
        ipv4_address: 172.30.0.53
    dns:
      - 45.90.28.166
      - 45.90.30.166
    cap_add:
      - NET_ADMIN
      - SYS_NICE
      - SYS_TIME
    environment:
      - TZ=Africa/Nairobi
      - WEBPASSWORD=${WEBPASSWORD}
    volumes:
      - ${DATADIR}/pihole/pihole:/etc/pihole
      - ${DATADIR}/pihole/dnsmasq.d:/etc/dnsmasq.d

  code-server:
    image: lscr.io/linuxserver/code-server:4.96.4-ls254
    container_name: code-server
    restart: unless-stopped
    environment:
      - PUID=1000 
      - PGID=1000
      - TZ=Africa/Nairobi
      - PASSWORD=${PASSWORD}
      - SUDO_PASSWORD=${SUDO_PASSWORD}
      - DEFAULT_WORKSPACE=/config/workspace
      # - PROXY_DOMAIN=code.yourdomain.com # Uncomment if using a reverse proxy
    ports:
      - "8443:8443"
    networks:
      - portainer_default
    volumes:
      - /d/data/docker/code-server/config:/config
      - /d/data/docker:/array


  gotify:
    image: ghcr.io/gotify/server:latest
    container_name: gotify
    restart: unless-stopped
    ports:
      - "82:80"
    environment:
      - TZ=Africa/Nairobi
    networks:
      - portainer_default
    volumes:
      - ${DATADIR}/gotify/data:/app/data

  #homeassistant:
  #  image: ghcr.io/home-assistant/home-assistant:stable
  #  container_name: homeassistant
  #  restart: always
  #  privileged: true
  #  cap_add:
  #    - NET_ADMIN
  #  network_mode: host
  #  environment:
  #    - DOCKER_HOST=tcp://docker-socket-proxy:2375
  #    - PUID=1000
  #    - PGID=1000
  #    - TZ=Africa/Nairobi
  #  devices:
  #    - /dev/ttyUSB0:/dev/ttyUSB0 # Example for Zigbee stick
  #  volumes:
  #    - ${DATADIR}/homeassistant/config:/config
  #    - /etc/localtime:/etc/localtime:ro
  #    - /run/user/1000/bus:/run/dbus:ro

  watchtower-local:
    image: containrrr/watchtower
    container_name: watchtower-local
    restart: always
    command: >
      --host http://localhost:2375 
    environment:
      - TZ=Africa/Nairobi
      - WATCHTOWER_TRACE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=7200
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_NOTIFICATIONS=gotify
      - WATCHTOWER_NOTIFICATIONS_HOSTNAME=MPC01
      - WATCHTOWER_NOTIFICATION_GOTIFY_URL=${WATCHTOWER_NOTIFICATION_GOTIFY_URL}
      - WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN=${WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN}
    networks:
      - portainer_default
    volumes:
      - ${DATADIR}/watchtower/config.json:/config.json

  watchtower-server:
    image: containrrr/watchtower
    container_name: watchtower-server
    restart: always
    command: >
      sh -c "watchtower --host http://$SERVER_URL:2375"
    environment:
      - TZ=Africa/Nairobi
      - SERVER_URL=${SERVER_URL}
      - WATCHTOWER_TRACE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=10800
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_NOTIFICATIONS=gotify
      - WATCHTOWER_NOTIFICATIONS_HOSTNAME=GCP01
      - WATCHTOWER_NOTIFICATION_GOTIFY_URL=${WATCHTOWER_NOTIFICATION_GOTIFY_URL}
      - WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN=${WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN}
    networks:
      - portainer_default
    volumes:
      - ${DATADIR}/watchtower/config.json:/config.json

networks:
  portainer_default:
    external: true
