services:

  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy:latest
    container_name: docker-socket-proxy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - CONTAINERS=1
      - IMAGES=1
      - NETWORKS=1
      - SERVICES=1
      - INFO=1
      - VERSION=1
      - SYSTEM=1
      - POST=1
      - TZ=Africa/Nairobi
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      internal_network:
        ipv4_address: 172.30.0.30
    ports:
      - "127.0.0.1:2375:2375" 
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    environment:
      - DOCKER_HOST=tcp://docker-socket-proxy:2375
    ports:
      - "8880:8080"
    networks:
      - internal_network
    dns:
      - 172.30.0.53
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: always
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80"
    networks:
      internal_network:
        ipv4_address: 172.30.0.53
    cap_add:
      - NET_ADMIN
      - SYS_NICE
      - SYS_TIME
    environment:
      - TZ=Africa/Nairobi
      - WEBPASSWORD=${WEBPASSWORD}
    volumes:
      - ${DATADIR}/pihole/pihole:/etc/pihole
      - ${DATADIR}/pihole/dnsmasq.d:/etc/dnsmasq.d

  code-server:
    image: lscr.io/linuxserver/code-server:4.96.4-ls254
    container_name: code-server
    restart: unless-stopped
    environment:
      - PUID=1000 
      - PGID=1000
      - TZ=Africa/Nairobi
      - PASSWORD=${PASSWORD}
      - SUDO_PASSWORD=${SUDO_PASSWORD}
      - DEFAULT_WORKSPACE=/config/workspace
      # - PROXY_DOMAIN=code.yourdomain.com # Uncomment if using a reverse proxy
    ports:
      - "8443:8443"
    networks:
      - internal_network
    volumes:
      - ${DATADIR}/code-server/config:/config
      - ${DATADIR}:/array

#  homeassistant:
#    image: ghcr.io/home-assistant/home-assistant:stable
#    container_name: homeassistant
#    restart: always
#    privileged: true
#    cap_add:
#      - NET_ADMIN
#    network_mode: host
#    environment:
#      - DOCKER_HOST=tcp://docker-socket-proxy:2375
#      - PUID=1000
#      - PGID=1000
#      - TZ=Africa/Nairobi
#    devices:
#      - /dev/ttyUSB0:/dev/ttyUSB0 # Example for Zigbee stick
#    volumes:
#      - ${DATADIR}/homeassistant/config:/config
#      - /etc/localtime:/etc/localtime:ro
#      - /run/user/1000/bus:/run/dbus:ro

#  watchtower-gcp01:
#    image: containrrr/watchtower
#    container_name: watchtower-gcp01
#    restart: always
#    entrypoint: ["/watchtower", "--host", "${SERVER_URL}"] 
#    environment:
#      - TZ=Africa/Nairobi
#      - SERVER_URL=${SERVER_URL}
#      - WATCHTOWER_TRACE=true
#      - WATCHTOWER_CLEANUP=true
#      - WATCHTOWER_POLL_INTERVAL=10800
#      - WATCHTOWER_INCLUDE_RESTARTING=true
#      - WATCHTOWER_NOTIFICATIONS=gotify
#      - WATCHTOWER_NOTIFICATIONS_HOSTNAME=GCP01
#      - WATCHTOWER_NOTIFICATION_GOTIFY_URL=${WATCHTOWER_NOTIFICATION_GOTIFY_URL}
#      - WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN=${WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN}
#    networks:
#      - watchtower_network
#    volumes:
#      - ${DATADIR}/watchtower/config.json:/config.json

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: syncthing
    environment:
      - PUID=1000 
      - PGID=1000
      - TZ=Africa/Nairobi
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    networks:
      - internal_network
    volumes:
      - ${DATADIR}/syncthing/config:/config
      - ${DATADIR}:/opt/d/data/docker
      - /d/data:/opt/d/data
      - /f/data:/opt/f/data

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    environment:
      - DOCKER_HOST=tcp://docker-socket-proxy:2375
      - TZ=Africa/Nairobi
      - WATCHTOWER_TRACE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=7200
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATIONS_HOSTNAME=LENADLM-MPC01
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL}
    networks:
      - internal_network
    volumes:
      - ${DATADIR}/watchtower/config.json:/config.json


networks:
  internal_network:
    external: true
  external_network:
    external: true
